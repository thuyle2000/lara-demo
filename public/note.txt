1. tạo bảng tbAccount
/*
DROP DATABASE IF EXISTS demo;
CREATE DATABASE demo; 
*/
USE demo;
CREATE TABLE tbAccount  (
  accountID int(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  email varchar(30),
  password varchar(10),
  fullname varchar(40),
  role int(1),
  active bit(1)
);

-- tạo tài khoản mặc định
INSERT INTO `tbAccount`( email, password, fullname,role, active) VALUES ('quang@gmail.com', '123', 'Hoang Duc Quang', 1, b'1');
INSERT INTO `tbAccount`( email, password, fullname,role, active) VALUES 
('thuy@gmail.com', '123', 'Le Mong Thuy', 2, b'1'),
('guest@gmail.com', 'abc', 'Guest', 2, b'0');


2. tạo project laravel

3. tạo controller `AccountController`

4. tạo view 
	- login.blade.php
	- admin/user/userAdd.blade.php
	- admin/user/userList.blade.php
	- user/profile.blade.php

5. tạo middleware `CheckLogin`
	- lập trình hàm handle()

	default: 
    public function handle(Request $request, Closure $next): Response
    {
        return $next($request);
    }


	new version
    public function handle(Request $request, Closure $next): Response
    {
        if ($request->session()->has('user')) {
            return $next($request);
        }
        return redirect('login');
    }

	- Đăng ký middleware trong tập tin app\Http\Kernel.php :
	'checkLogin' => \App\Http\Middleware\CheckLogin::class, 

6. Lập trình chức năng:
	6a. Login:
        - view: login.blade.php
        - controller: AccountController / 
                        login()
                        authenticate()
        - route: 
        Route::get('/login',[AccountController::class,'login']);
        Route::post('/checkLogin',[AccountController::class,'authenticate']);

        *** phân nhánh chức năng dựa theo role:
        - trong authenticate(), 
            if ($user->role == 1) {
                // return redirect('admin/users');
                return redirect()->route('adminuserlist');

            } else {
                // return redirect("user/details/" . $user->accountid);
                return redirect()->route('userprofile',['id'=>$user->accountid]);
            }

        - trong route:
        Route::prefix('admin')->name('admin')->middleware('checkLogin:admin')->group(function() {
            Route::get('users',[AccountController::class, 'users'])->name("userlist");
            Route::get('displayAddUser',[AccountController::class, 'displayAddUser']);
            Route::post('addUser', [AccountController::class, 'addUser']);
            Route::get('resetPassword/{id}',[AccountController::class, 'resetPassword']);
        });

        Route::prefix('user')->name('user')->middleware('checkLogin:user,admin')->group(function() {
            Route::get('details/{id}', [AccountController::class, 'details'])->name("profile");
        });


    6b: Xem danh sách user: 
        - view: admin/user/userList.blade.php
        - controller: AccountController / 
                        users()




    6c: Xem thong tin user profile: 
        - view: user/profile.blade.php
        - controller: AccountController / 
                        details($id)


    6d: logout
        - controller: AccountController / 
                        logout()



7. modify middleware, chan lay url chay sai chuc nang
    public function handle(Request $request, Closure $next, ...$roles)
    {
        if ($request->session()->has('user')) {
            $user = $request->session()->get('user');

            // dd($roles); // echo + exit

            $r = $user->role==1?"admin":"user";

            if (in_array($r, $roles )) {
                return $next($request);
            }
        }
        return redirect('login');
    }


